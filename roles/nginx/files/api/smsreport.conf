server{
	listen        80;
	server_name   stag-smsreport.betaout.in;


#charset koi8-r;







	location / {
		proxy_read_timeout 60s;
		proxy_connect_timeout 60s;
		proxy_ignore_client_abort on;
		root   /var/www/jal/public;


# For Rewriting all SMS Request to V2, Can be eliminated once V1 entirely Stopped.
		if ($request_uri ~ /sms) {
			root /var/www/jal/public;
		}


# For Rewriting all PUSH Request to V2, Can be eliminated once V1 entirely Stopped.
                if ($request_uri ~ /push) {
                        root    /var/www/jal/publicV2;
                }


		index index.php index.html index.htm;

		if (!-e $request_filename) {
			rewrite ^(.+)$ /index.php?q=$1 last;

		}

	}


	location /beacon {
		internal;
		root    /var/www/jal/publicV2;
		try_files $uri /index.php?key=$abc;
	}   

	location /sms/gupshup-bulk {
		return 200 'OK';
		add_header Content-Type text/plain;		
	}


	error_page  404              /404.html;
	location = /404.html {
		root   /usr/share/nginx/html;
	}

# redirect server error pages to the static page /50x.html
#
#	error_page   500 502 503 504  /50x.html;
#	location = /50x.html {
#		root   /usr/share/nginx/html;
#	}

# proxy the PHP scripts to Apache listening on 127.0.0.1:80
#
#location ~ \.php$ {
#    proxy_pass   http://127.0.0.1;
#}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
	location ~ \.php$ {
		root    /var/www/jal/public;

# For Rewriting all SMS Request to V2, Can be eliminated once V1 entirely Stopped.
		if ($request_uri ~ /sms) {
			root	/var/www/jal/public/;
		}


# For Rewriting all PUSH Request to V2, Can be eliminated once V1 entirely Stopped.
                if ($request_uri ~ /push) {
                        root    /var/www/jal/publicV2;
                }

		fastcgi_pass   127.0.0.1:9000;
		fastcgi_connect_timeout 60s;
		fastcgi_send_timeout 60s;
		fastcgi_read_timeout 60s;
		fastcgi_index  index.php;
		fastcgi_buffer_size 128k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		fastcgi_ignore_client_abort on;
		fastcgi_intercept_errors on;
		proxy_intercept_errors on;
		include        fastcgi_params;
	}

#location  /  {
#autoindex  on;
#}
# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#    deny  all;
#}

}
