input {
	beats {
		port => 5044
#   ssl => true
#   ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
#   ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
	}
}
filter {
if [type] == "fullcontact"{
grok {
	  match => { "message" => "%{FULLCONTACT}" }
          patterns_dir => ["/opt/logstash/patterns", "/opt/logstash/extra_patterns"]
	  remove_field => ["_grokparsefailure","tags","beat","input_type","count","offset","fields","@version"]
}

}


	if [type] == "nginx_access" or [type] == "nginx_maccess"{



grok {
	  match => { "message" => "%{NGINXAPIACCESS}" }
          patterns_dir => ["/opt/logstash/patterns", "/opt/logstash/extra_patterns"]
	  remove_field => ["_grokparsefailure","tags","beat","input_type","count","offset","fields","@version"]
}

	kv{
		source => "req_uri"
			field_split => "&?"
			include_keys => [ "project_id" ]

	}
	date {
		match => [ "time" , "dd/MMM/YYYY:HH:mm:ss Z" ]
			target=> '@timestamp'
	}
}
geoip {
	source => "rem_addr"
}

if [resp_code] == "-" or [resp_code] == ""{
	mutate {
    remove_field => [ "resp_code" ]
  }
}
if [req_tm] == "-" or [req_tm] == ""{
	mutate {
    remove_field => [ "req_tm" ]
  }
}


}
output {
	elasticsearch {
		hosts => ["localhost:9200"]
			sniffing => true
			manage_template => false
			index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
			document_type => "%{[@metadata][type]}"
	}
#	stdout {
#		codec=> "rubydebug"
#     }
}