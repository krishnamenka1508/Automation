#take input from file.
input {
	file {
		path => "/var/log/nginx/access.log"

#        To reparse file from beginning
#        start_position => "beginning"
#        sincedb_path => "/dev/null"
	}
}

filter {
#parse req_uri
	grok {
          patterns_dir => ["/opt/logstash/patterns", "/opt/logstash/extra_patterns"]
	  match => { "message" => "%{NGINXAPIACCESS}" }
	  remove_field => ["message","@version","@timestamp","path","host","end_point","req_tm","req_method","resp_code","scheme","nginx_host"]
}


#add case for each req_uri
if "/sms/mgage" in [req_uri] {
    
    # To prevent invalid mgage request.
	if "a2wackid=" in [req_uri] {
  		mutate { add_field => {"case" => "mgage"} }
	}else {
 		mutate { add_field => {"case" => "mgage_invalid"} }
	}
	
} else if "/sms/gupshup-bulk" in [req_uri]  {
  mutate { add_field => {"case" => "gupshup"} }
}else if "sms/mytoday" in [req_uri]  {
  mutate { add_field => {"case" => "mytoday"} }
}else if "/sms/timesinternet" in [req_uri]  {
  mutate { add_field => {"case" => "timesinternet"} }
}else if "/o/" in [req_uri]  {
  mutate { add_field => {"case" => "opened"} }
} else {
 mutate { add_field => {"case" => "other"} }
}

}


output {

#send to queue, for case mgage, gupshup and mytoday
if [case] == "mgage" or [case] == "gupshup" or [case] == "mytoday" or [case] == "timesinternet"{
	 rabbitmq {
		    exchange => "logstash_sms_activties_exchange"
			exchange_type => "direct"
			host => "{{logstash_rmqs_host}}"
			key => "logstash_sms_activties_key"
			password => "{{rabbitmq_password}}"
			user=>"{{rabbitmq_user}}"
			vhost=>"bov2-durable"
			durable=>false
	}
}
else if [case] == "opened"{
	rabbitmq {
		    exchange => "logstash_email_activities_exchange"
			exchange_type => "direct"
			host => "{{logstash_rmqs_host}}"
			key => "logstash_email_activities_key"
			password => "{{rabbitmq_password}}"
			user=>"{{rabbitmq_user}}"
			vhost=>"bov2-durable"
			durable=>false
	}
}


#file {
#    path => "/var/log/logstash/mylogstash.log"
#    codec => "rubydebug"
#}

#	stdout {
#		codec=> "rubydebug"
#	}

}