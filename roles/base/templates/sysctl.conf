# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Controls source route verification
net.ipv4.conf.default.rp_filter = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
kernel.core_uses_pid = 1

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1

# Disable netfilter on bridges.
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0

# Controls the default maxmimum size of a mesage queue
kernel.msgmnb = 65536

# Controls the maximum size of a message, in bytes
kernel.msgmax = 65536

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296


# Max receive buffer size (8 Mb)

net.core.rmem_max=8388608

# Max send buffer size (8 Mb)

net.core.wmem_max=8388608



# Default receive buffer size

net.core.rmem_default=65536

# Default send buffer size

net.core.wmem_default=65536



# The first value tells the kernel the minimum receive/send buffer for each TCP connection,

# and this buffer is always allocated to a TCP socket,

# even under high pressure on the system. …

# The second value specified tells the kernel the default receive/send buffer

# allocated for each TCP socket. This value overrides the /proc/sys/net/core/rmem_default

# value used by other protocols. … The third and last value specified

# in this variable specifies the maximum receive/send buffer that can be allocated for a TCP socket.

# Note: The kernel will auto tune these values between the min-max range

# If for some reason you wanted to change this behavior, disable net.ipv4.tcp_moderate_rcvbuf

net.ipv4.tcp_rmem=8192 873800 8388608

net.ipv4.tcp_wmem=4096 655360 8388608



# Units are in page size (default page size is 4 kb)

# These are global variables affecting total pages for TCP

# sockets

# 8388608 * 4 = 32 GB

#  low pressure high

#  When mem allocated by TCP exceeds “pressure”, kernel will put pressure on TCP memory

#  We set all these values high to basically prevent any mem pressure from ever occurring

#  on our TCP sockets

net.ipv4.tcp_mem=8388608 8388608 8388608



# Increase max number of sockets allowed in TIME_WAIT

net.ipv4.tcp_max_tw_buckets=6000000



# Increase max half-open connections.

net.ipv4.tcp_max_syn_backlog=65536



# Increase max TCP orphans

# These are sockets which have been closed and no longer have a file handle attached to them

net.ipv4.tcp_max_orphans=262144



# Max listen queue backlog

# make sure to increase nginx backlog as well if changed

net.core.somaxconn = 16384



# Max number of packets that can be queued on interface input

# If kernel is receiving packets faster than can be processed

# this queue increases

net.core.netdev_max_backlog = 16384



# Only retry creating TCP connections twice

# Minimize the time it takes for a connection attempt to fail

net.ipv4.tcp_synack_retries = 2

net.ipv4.tcp_syn_retries = 2



# Timeout closing of TCP connections after 7 seconds

net.ipv4.tcp_fin_timeout = 7



# Avoid falling back to slow start after a connection goes idle

# keeps our cwnd large with the keep alive connections

net.ipv4.tcp_slow_start_after_idle = 0

# TCP Keep Alive
# different data centers
#net.ipv4.tcp_keepalive_time = 200
#net.ipv4.tcp_keepalive_intvl = 200
#net.ipv4.tcp_keepalive_probes = 5

# same data centers
net.ipv4.tcp_keepalive_time = 120
net.ipv4.tcp_keepalive_intvl = 75
net.ipv4.tcp_keepalive_probes = 9

vm.swappiness = 0
vm.dirty_background_ratio = 0
vm.dirty_background_bytes = 209715200
vm.dirty_ratio = 40
vm.dirty_bytes = 0
vm.dirty_writeback_centisecs = 100
vm.dirty_expire_centisecs = 200
